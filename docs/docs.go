// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Aleksand Efremov",
            "url": "https://github.com/efremovich/cargo-rest-api",
            "email": "sasha.fima@gmail.com"
        },
        "license": {
            "name": "MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/ping": {
            "get": {
                "description": "Check server response.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "development"
                ],
                "summary": "Ping server",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    }
                }
            }
        },
        "/api/secret": {
            "get": {
                "description": "Retrieve base64 encoded string of private key and public key through rest api.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "development"
                ],
                "summary": "Generate a secret",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "ru"
                        ],
                        "type": "string",
                        "default": "en",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    }
                }
            }
        },
        "/api/v1/external/login": {
            "post": {
                "description": "Login by email and password.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Authentication login",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "ru"
                        ],
                        "type": "string",
                        "default": "en",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Request id",
                        "name": "Set-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "User email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    }
                }
            }
        },
        "/api/v1/external/logout": {
            "post": {
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Logout using Authorization Header.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Authentication logout",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "ru"
                        ],
                        "type": "string",
                        "default": "en",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Request id",
                        "name": "Set-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    }
                }
            }
        },
        "/api/v1/external/password/forgot": {
            "post": {
                "description": "Retrieve an email contain link to reset password.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Authentication forgot password",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "ru"
                        ],
                        "type": "string",
                        "default": "en",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Email address",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    }
                }
            }
        },
        "/api/v1/external/password/reset/{token}": {
            "post": {
                "description": "Set a new password.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Authentication reset password",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "ru"
                        ],
                        "type": "string",
                        "default": "en",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Token from forgot password request",
                        "name": "token",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New password",
                        "name": "new_password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Confirm password",
                        "name": "confirm_password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    }
                }
            }
        },
        "/api/v1/external/preference": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Get current user preference using Authorization Header.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "preference"
                ],
                "summary": "User preference",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "ru"
                        ],
                        "type": "string",
                        "default": "en",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Request id",
                        "name": "Set-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Update current user preference using Authorization Header.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "preference"
                ],
                "summary": "Update user preference",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "ru"
                        ],
                        "type": "string",
                        "default": "en",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Request id",
                        "name": "Set-Request-Id",
                        "in": "header"
                    },
                    {
                        "description": "User preference",
                        "name": "preference",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.DetailUserPreference"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    }
                }
            }
        },
        "/api/v1/external/preference/reset": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Reset current user preference to default using Authorization Header.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "preference"
                ],
                "summary": "Reset user preference",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "ru"
                        ],
                        "type": "string",
                        "default": "en",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Request id",
                        "name": "Set-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    }
                }
            }
        },
        "/api/v1/external/profile": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWTAuth": []
                    },
                    {
                        "OauthGrantTypePassword": []
                    }
                ],
                "description": "Get current user profile using Authorization Header.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Authentication profile",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "ru"
                        ],
                        "type": "string",
                        "default": "en",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Request id",
                        "name": "Set-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    }
                }
            }
        },
        "/api/v1/external/refresh": {
            "post": {
                "description": "Retrieve a new access_token using refresh token.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Authentication refresh",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "ru"
                        ],
                        "type": "string",
                        "default": "en",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Refresh token from /login",
                        "name": "refresh_token",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    }
                }
            }
        },
        "/api/v1/external/sities": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Get list of existing sities.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sities"
                ],
                "summary": "Get sities",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "ru"
                        ],
                        "type": "string",
                        "default": "en",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Request id",
                        "name": "Set-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Create a new sity.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sities"
                ],
                "summary": "Create a new sity",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "ru"
                        ],
                        "type": "string",
                        "default": "en",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Request id",
                        "name": "Set-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Sity name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Sity region",
                        "name": "region",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Sity lantitude",
                        "name": "lantitude",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Sity longitude",
                        "name": "longitude",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    }
                }
            }
        },
        "/api/v1/external/sities/uuid": {
            "put": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Update an existing sity.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sities"
                ],
                "summary": "Update sity",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "ru"
                        ],
                        "type": "string",
                        "default": "en",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Request id",
                        "name": "Set-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Sity UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Sity name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Sity region",
                        "name": "region",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Sity latitude",
                        "name": "latitude",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Sity longitude",
                        "name": "longitude",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    }
                }
            }
        },
        "/api/v1/external/sities/{uuid}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Get detail of existing sity.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sities"
                ],
                "summary": "Get sity",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "ru"
                        ],
                        "type": "string",
                        "default": "en",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Request id",
                        "name": "Set-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Sity UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Delete an existing sity.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sities"
                ],
                "summary": "Delete sity",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "ru"
                        ],
                        "type": "string",
                        "default": "en",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Request id",
                        "name": "Set-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Sity UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    }
                }
            }
        },
        "/api/v1/external/users": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get list of existing users.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get users",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "ru"
                        ],
                        "type": "string",
                        "default": "en",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Request id",
                        "name": "Set-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Create a new user.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "ru"
                        ],
                        "type": "string",
                        "default": "en",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Request id",
                        "name": "Set-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "User name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User phone",
                        "name": "phone",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    }
                }
            }
        },
        "/api/v1/external/users/uuid": {
            "put": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Update an existing user.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "ru"
                        ],
                        "type": "string",
                        "default": "en",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Request id",
                        "name": "Set-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "User UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User phone",
                        "name": "phone",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    }
                }
            }
        },
        "/api/v1/external/users/{uuid}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Get detail of existing user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "ru"
                        ],
                        "type": "string",
                        "default": "en",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Request id",
                        "name": "Set-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "User UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Delete an existing user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "ru"
                        ],
                        "type": "string",
                        "default": "en",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Request id",
                        "name": "Set-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "User UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    }
                }
            }
        },
        "/api/v1/external/users/{uuid}/avatar": {
            "put": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Update user avatar of existing user.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user avatar",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "ru"
                        ],
                        "type": "string",
                        "default": "en",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Request id",
                        "name": "Set-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "User UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "User Avatar",
                        "name": "avatar",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    }
                }
            }
        },
        "/api/v1/external/vehicles": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Get list of existing vehicles.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicles"
                ],
                "summary": "Get vehicles",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "ru"
                        ],
                        "type": "string",
                        "default": "en",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Request id",
                        "name": "Set-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Create a new vehicle.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicles"
                ],
                "summary": "Create a new vehicle",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "ru"
                        ],
                        "type": "string",
                        "default": "en",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Request id",
                        "name": "Set-Request-Id",
                        "in": "header"
                    },
                    {
                        "description": "Vehicle vehicle",
                        "name": "vehicle",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.DetailVehicle"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    }
                }
            }
        },
        "/api/v1/external/vehicles/uuid": {
            "put": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Update an existing vehicle.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicles"
                ],
                "summary": "Update vehicle",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "ru"
                        ],
                        "type": "string",
                        "default": "en",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Request id",
                        "name": "Set-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Vehicle UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Vehicle name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Vehicle region",
                        "name": "region",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Vehicle latitude",
                        "name": "latitude",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Vehicle longitude",
                        "name": "longitude",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    }
                }
            }
        },
        "/api/v1/external/vehicles/{uuid}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Get detail of existing vehicle.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicles"
                ],
                "summary": "Get vehicle",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "ru"
                        ],
                        "type": "string",
                        "default": "en",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Request id",
                        "name": "Set-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Vehicle UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Delete an existing vehicle.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicles"
                ],
                "summary": "Delete vehicle",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "ru"
                        ],
                        "type": "string",
                        "default": "en",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Request id",
                        "name": "Set-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Vehicle UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorOutput"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.DetailUserPreference": {
            "type": "object",
            "properties": {
                "dark_mode": {
                    "type": "boolean"
                },
                "language": {
                    "type": "string"
                },
                "skip_tour": {
                    "type": "boolean"
                }
            }
        },
        "entity.DetailVehicle": {
            "type": "object",
            "properties": {
                "class": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "number_of_seats": {
                    "type": "string"
                },
                "reg_code": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "response.errorOutput": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "data": {},
                "error_code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.successOutput": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                },
                "meta": {}
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "JWTAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "Oauth2AccessCode": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "http://localhost:8888/oauth/authorize",
            "tokenUrl": "http://localhost:8888/oauth/token",
            "scopes": {
                "all": " Grants all access"
            }
        },
        "Oauth2Password": {
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "http://localhost:8888/oauth/token",
            "scopes": {
                "all": " Grants all access"
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8888",
	BasePath:    "",
	Schemes:     []string{"http"},
	Title:       "cargo-rest-api",
	Description: "Enter your bearer token in the format **Bearer &lt;token>**",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}

definitions:
  entity.DetailUserPreference:
    properties:
      dark_mode:
        type: boolean
      language:
        type: string
      skip_tour:
        type: boolean
    type: object
  response.errorOutput:
    properties:
      args:
        type: string
      code:
        type: integer
      data: {}
      error_code:
        type: string
      message:
        type: string
    type: object
  response.successOutput:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
      meta: {}
    type: object
host: localhost:8888
info:
  contact:
    email: sasha.fima@gmail.com
    name: Aleksand Efremov
    url: https://github.com/efremovich/cargo-rest-api
  description: Enter your bearer token in the format **Bearer &lt;token>**
  license:
    name: MIT
  title: cargo-rest-api
  version: "1.0"
paths:
  /api/ping:
    get:
      consumes:
      - application/json
      description: Check server response.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.successOutput'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorOutput'
      summary: Ping server
      tags:
      - development
  /api/secret:
    get:
      consumes:
      - application/json
      description: Retrieve base64 encoded string of private key and public key through
        rest api.
      parameters:
      - default: en
        description: Language code
        enum:
        - en
        - ru
        in: header
        name: Accept-Language
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.successOutput'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorOutput'
      summary: Generate a secret
      tags:
      - development
  /api/v1/external/login:
    post:
      consumes:
      - multipart/form-data
      description: Login by email and password.
      parameters:
      - default: en
        description: Language code
        enum:
        - en
        - ru
        in: header
        name: Accept-Language
        type: string
      - description: Request id
        in: header
        name: Set-Request-Id
        type: string
      - description: User email
        in: formData
        name: email
        required: true
        type: string
      - description: User password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.successOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorOutput'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.errorOutput'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorOutput'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.errorOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorOutput'
      summary: Authentication login
      tags:
      - authentication
  /api/v1/external/logout:
    post:
      description: Logout using Authorization Header.
      parameters:
      - default: en
        description: Language code
        enum:
        - en
        - ru
        in: header
        name: Accept-Language
        type: string
      - description: Request id
        in: header
        name: Set-Request-Id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.successOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorOutput'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.errorOutput'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorOutput'
      security:
      - JWTAuth: []
      summary: Authentication logout
      tags:
      - authentication
  /api/v1/external/password/forgot:
    post:
      consumes:
      - multipart/form-data
      description: Retrieve an email contain link to reset password.
      parameters:
      - default: en
        description: Language code
        enum:
        - en
        - ru
        in: header
        name: Accept-Language
        type: string
      - description: Email address
        in: formData
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.successOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorOutput'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorOutput'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.errorOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorOutput'
      summary: Authentication forgot password
      tags:
      - authentication
  /api/v1/external/password/reset/{token}:
    post:
      consumes:
      - multipart/form-data
      description: Set a new password.
      parameters:
      - default: en
        description: Language code
        enum:
        - en
        - ru
        in: header
        name: Accept-Language
        type: string
      - description: Token from forgot password request
        in: formData
        name: token
        required: true
        type: string
      - description: New password
        in: formData
        name: new_password
        required: true
        type: string
      - description: Confirm password
        in: formData
        name: confirm_password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.successOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorOutput'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorOutput'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.errorOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorOutput'
      summary: Authentication reset password
      tags:
      - authentication
  /api/v1/external/preference:
    get:
      description: Get current user preference using Authorization Header.
      parameters:
      - default: en
        description: Language code
        enum:
        - en
        - ru
        in: header
        name: Accept-Language
        type: string
      - description: Request id
        in: header
        name: Set-Request-Id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.successOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorOutput'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.errorOutput'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorOutput'
      security:
      - BasicAuth: []
      - JWTAuth: []
      summary: User preference
      tags:
      - preference
    put:
      consumes:
      - application/json
      description: Update current user preference using Authorization Header.
      parameters:
      - default: en
        description: Language code
        enum:
        - en
        - ru
        in: header
        name: Accept-Language
        type: string
      - description: Request id
        in: header
        name: Set-Request-Id
        type: string
      - description: User preference
        in: body
        name: preference
        required: true
        schema:
          $ref: '#/definitions/entity.DetailUserPreference'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.successOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorOutput'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.errorOutput'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorOutput'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.errorOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorOutput'
      security:
      - BasicAuth: []
      - JWTAuth: []
      summary: Update user preference
      tags:
      - preference
  /api/v1/external/preference/reset:
    post:
      description: Reset current user preference to default using Authorization Header.
      parameters:
      - default: en
        description: Language code
        enum:
        - en
        - ru
        in: header
        name: Accept-Language
        type: string
      - description: Request id
        in: header
        name: Set-Request-Id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.successOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorOutput'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.errorOutput'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorOutput'
      security:
      - BasicAuth: []
      - JWTAuth: []
      summary: Reset user preference
      tags:
      - preference
  /api/v1/external/profile:
    get:
      description: Get current user profile using Authorization Header.
      parameters:
      - default: en
        description: Language code
        enum:
        - en
        - ru
        in: header
        name: Accept-Language
        type: string
      - description: Request id
        in: header
        name: Set-Request-Id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.successOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorOutput'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.errorOutput'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorOutput'
      security:
      - BasicAuth: []
      - JWTAuth: []
      - OauthGrantTypePassword: []
      summary: Authentication profile
      tags:
      - authentication
  /api/v1/external/refresh:
    post:
      consumes:
      - multipart/form-data
      description: Retrieve a new access_token using refresh token.
      parameters:
      - default: en
        description: Language code
        enum:
        - en
        - ru
        in: header
        name: Accept-Language
        type: string
      - description: Refresh token from /login
        in: formData
        name: refresh_token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.successOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorOutput'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorOutput'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.errorOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorOutput'
      summary: Authentication refresh
      tags:
      - authentication
  /api/v1/external/sities:
    get:
      description: Get list of existing sities.
      parameters:
      - default: en
        description: Language code
        enum:
        - en
        - ru
        in: header
        name: Accept-Language
        type: string
      - description: Request id
        in: header
        name: Set-Request-Id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.successOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorOutput'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.errorOutput'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.errorOutput'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorOutput'
      security:
      - BasicAuth: []
      - JWTAuth: []
      summary: Get sities
      tags:
      - sities
    post:
      consumes:
      - application/json
      description: Create a new sity.
      parameters:
      - default: en
        description: Language code
        enum:
        - en
        - ru
        in: header
        name: Accept-Language
        type: string
      - description: Request id
        in: header
        name: Set-Request-Id
        type: string
      - description: Sity name
        in: formData
        name: name
        required: true
        type: string
      - description: Sity latitude
        in: formData
        name: latitude
        required: true
        type: string
      - description: Sity longitude
        in: formData
        name: longitude
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.successOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorOutput'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.errorOutput'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.errorOutput'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorOutput'
      security:
      - BasicAuth: []
      - JWTAuth: []
      summary: Create a new sity
      tags:
      - sities
  /api/v1/external/sities/{uuid}:
    delete:
      description: Delete an existing sity.
      parameters:
      - default: en
        description: Language code
        enum:
        - en
        - ru
        in: header
        name: Accept-Language
        type: string
      - description: Request id
        in: header
        name: Set-Request-Id
        type: string
      - description: Sity UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.successOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorOutput'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.errorOutput'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.errorOutput'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorOutput'
      security:
      - BasicAuth: []
      - JWTAuth: []
      summary: Delete sity
      tags:
      - sities
    get:
      description: Get detail of existing sity.
      parameters:
      - default: en
        description: Language code
        enum:
        - en
        - ru
        in: header
        name: Accept-Language
        type: string
      - description: Request id
        in: header
        name: Set-Request-Id
        type: string
      - description: Sity UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.successOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorOutput'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.errorOutput'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.errorOutput'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorOutput'
      security:
      - BasicAuth: []
      - JWTAuth: []
      summary: Get sity
      tags:
      - sities
  /api/v1/external/sities/uuid:
    put:
      consumes:
      - application/json
      description: Update an existing sity.
      parameters:
      - default: en
        description: Language code
        enum:
        - en
        - ru
        in: header
        name: Accept-Language
        type: string
      - description: Request id
        in: header
        name: Set-Request-Id
        type: string
      - description: Sity UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Sity name
        in: formData
        name: name
        required: true
        type: string
      - description: Sity latitude
        in: formData
        name: latitude
        required: true
        type: string
      - description: Sity longitude
        in: formData
        name: longitude
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.successOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorOutput'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.errorOutput'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.errorOutput'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorOutput'
      security:
      - BasicAuth: []
      - JWTAuth: []
      summary: Update sity
      tags:
      - sities
  /api/v1/external/users:
    get:
      description: Get list of existing users.
      parameters:
      - default: en
        description: Language code
        enum:
        - en
        - ru
        in: header
        name: Accept-Language
        type: string
      - description: Request id
        in: header
        name: Set-Request-Id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.successOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorOutput'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.errorOutput'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.errorOutput'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorOutput'
      security:
      - BasicAuth: []
      - JWTAuth: []
      - ApiKeyAuth: []
      summary: Get users
      tags:
      - users
    post:
      consumes:
      - multipart/form-data
      description: Create a new user.
      parameters:
      - default: en
        description: Language code
        enum:
        - en
        - ru
        in: header
        name: Accept-Language
        type: string
      - description: Request id
        in: header
        name: Set-Request-Id
        type: string
      - description: User name
        in: formData
        name: name
        required: true
        type: string
      - description: User password
        in: formData
        name: password
        required: true
        type: string
      - description: User email
        in: formData
        name: email
        required: true
        type: string
      - description: User phone
        in: formData
        name: phone
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.successOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorOutput'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.errorOutput'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.errorOutput'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorOutput'
      security:
      - BasicAuth: []
      - JWTAuth: []
      summary: Create a new user
      tags:
      - users
  /api/v1/external/users/{uuid}:
    delete:
      description: Delete an existing user.
      parameters:
      - default: en
        description: Language code
        enum:
        - en
        - ru
        in: header
        name: Accept-Language
        type: string
      - description: Request id
        in: header
        name: Set-Request-Id
        type: string
      - description: User UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.successOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorOutput'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.errorOutput'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.errorOutput'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorOutput'
      security:
      - BasicAuth: []
      - JWTAuth: []
      summary: Delete user
      tags:
      - users
    get:
      description: Get detail of existing user.
      parameters:
      - default: en
        description: Language code
        enum:
        - en
        - ru
        in: header
        name: Accept-Language
        type: string
      - description: Request id
        in: header
        name: Set-Request-Id
        type: string
      - description: User UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.successOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorOutput'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.errorOutput'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.errorOutput'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorOutput'
      security:
      - BasicAuth: []
      - JWTAuth: []
      summary: Get user
      tags:
      - users
  /api/v1/external/users/{uuid}/avatar:
    put:
      consumes:
      - multipart/form-data
      description: Update user avatar of existing user.
      parameters:
      - default: en
        description: Language code
        enum:
        - en
        - ru
        in: header
        name: Accept-Language
        type: string
      - description: Request id
        in: header
        name: Set-Request-Id
        type: string
      - description: User UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: User Avatar
        in: formData
        name: avatar
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.successOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorOutput'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.errorOutput'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.errorOutput'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorOutput'
      security:
      - BasicAuth: []
      - JWTAuth: []
      summary: Update user avatar
      tags:
      - users
  /api/v1/external/users/uuid:
    put:
      consumes:
      - multipart/form-data
      description: Update an existing user.
      parameters:
      - default: en
        description: Language code
        enum:
        - en
        - ru
        in: header
        name: Accept-Language
        type: string
      - description: Request id
        in: header
        name: Set-Request-Id
        type: string
      - description: User UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: User name
        in: formData
        name: name
        required: true
        type: string
      - description: User password
        in: formData
        name: password
        required: true
        type: string
      - description: User email
        in: formData
        name: email
        required: true
        type: string
      - description: User phone
        in: formData
        name: phone
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.successOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorOutput'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.errorOutput'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.errorOutput'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorOutput'
      security:
      - BasicAuth: []
      - JWTAuth: []
      summary: Update user
      tags:
      - users
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: api_key
    type: apiKey
  BasicAuth:
    type: basic
  JWTAuth:
    in: header
    name: Authorization
    type: apiKey
  Oauth2AccessCode:
    authorizationUrl: http://localhost:8888/oauth/authorize
    flow: accessCode
    scopes:
      all: ' Grants all access'
    tokenUrl: http://localhost:8888/oauth/token
    type: oauth2
  Oauth2Password:
    flow: password
    scopes:
      all: ' Grants all access'
    tokenUrl: http://localhost:8888/oauth/token
    type: oauth2
swagger: "2.0"
